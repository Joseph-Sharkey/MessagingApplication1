const pool = require("./postgresInitialise");
const addChatMember = require("./addChatMember");
const deleteFriendRequest = require("./deleteFriendRequest");
//for single group chat, there will only be two users and the chatname will be an autogenerated combination of their two names eg: bob and david

const initialiseChat = (chatNumber, chatName, chatDescription) => {
	return new Promise(function(resolve, reject) {
		pool.query("insert into chat(chat_key, chat_name, chat_description) values ($1, $2, $3) returning chat_key", [chatNumber, chatName, chatDescription])
		.then(response => {
			return response.rows[0].chat_key;
		})
		.then(response => {
			resolve(response)
		})
		.catch(err => {
			reject(err)
		});
	});
};


//use this with an async for loop for adding members to a group chat
//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of

const createChat = (chatNumber, userNumbers, chatName, chatDescription) => {
	return new Promise(function(resolve, reject) {
		initialiseChat(chatNumber, chatName, chatDescription)
		.then(data => {
			console.log("the chat key is "+ data)
			//data is the chatkey
			userNumbers.forEach(participant => {addChatMember(participant, chatNumber)}) //adds all the possible members to the group chat
		})
		.then((response) => {
			return deleteFriendRequest(userNumbers[0], userNumbers[1])	
		})
		.then(response => {
			resolve(true)
		})
		.catch(err => {
			reject(err)
		});
	});
};



module.exports = createChat;